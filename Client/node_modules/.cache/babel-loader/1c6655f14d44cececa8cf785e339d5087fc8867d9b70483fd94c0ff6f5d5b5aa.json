{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Desktop/CS/Projects/Hall of Fame odds/Client/src/components/PlayerStats.js\",\n  _s = $RefreshSig$();\n// Import necessary dependencies\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useParams } from 'react-router-dom';\n\n// PlayerStats component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerStats() {\n  _s();\n  // Get location and player data from router\n  const location = useLocation();\n  const {\n    player\n  } = location.state || {};\n  const {\n    playerId\n  } = useParams();\n\n  // State for player stats and Hall of Fame probability\n  const [stats, setStats] = useState(null);\n  const [probability, setProbability] = useState(null);\n\n  // Fetch player stats when component mounts or playerId changes\n  useEffect(() => {\n    const fetchPlayerStats = async () => {\n      try {\n        // Make API call to get player stats\n        const response = await axios.get(`http://localhost:3001/player-stats/${playerId}`);\n        setStats(response.data.modelInput);\n        setProbability(response.data.probability);\n      } catch (error) {\n        console.error('Error fetching player stats:', error);\n      }\n    };\n    if (playerId) {\n      fetchPlayerStats();\n    }\n  }, [playerId]);\n\n  // Render player stats\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stats ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [player.name, \" Stats\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Points Per Game: \", stats.PPG.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Assists Per Game: \", stats.APG.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rebounds Per Game: \", stats.RPG.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"MVPs: \", stats.MVP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"FMVPs: \", stats.FMVP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"DPOY: \", stats.DPOY]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ROY: \", stats.ROY]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Championships: \", stats.Championships]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"All Stars: \", stats.AllStars]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"First Team All-NBA: \", stats.FirstTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Second Team All-NBA: \", stats.SecondTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Third Team All-NBA: \", stats.ThirdTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"First Team All-Defense: \", stats.DefFirstTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"First Team All-Rookie: \", stats.RookieFirstTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Second Team All-Rookie: \", stats.RookieSecondTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Hall of Fame Probability: \", (probability * 100).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading stats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(PlayerStats, \"tewsWFqQLlVKnfblpxEXAwbZGe0=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = PlayerStats;\nexport default PlayerStats;\nvar _c;\n$RefreshReg$(_c, \"PlayerStats\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useParams","jsxDEV","_jsxDEV","PlayerStats","_s","location","player","state","playerId","stats","setStats","probability","setProbability","fetchPlayerStats","response","get","data","modelInput","error","console","children","name","fileName","_jsxFileName","lineNumber","columnNumber","PPG","toFixed","APG","RPG","MVP","FMVP","DPOY","ROY","Championships","AllStars","FirstTeam","SecondTeam","ThirdTeam","DefFirstTeam","RookieFirstTeam","RookieSecondTeam","_c","$RefreshReg$"],"sources":["/Users/ryan/Desktop/CS/Projects/Hall of Fame odds/Client/src/components/PlayerStats.js"],"sourcesContent":["// Import necessary dependencies\nimport React, {useEffect, useState} from 'react'; \nimport axios from 'axios'; \nimport { useLocation, useParams } from 'react-router-dom';\n\n// PlayerStats component\nfunction PlayerStats(){\n\n  \n    // Get location and player data from router\n    const location = useLocation(); \n    const {player} = location.state || {};\n    const { playerId } = useParams();\n    \n    // State for player stats and Hall of Fame probability\n    const [stats, setStats] = useState(null);\n    const [probability, setProbability] = useState(null);\n    \n    // Fetch player stats when component mounts or playerId changes\n    useEffect(() => {\n        const fetchPlayerStats = async () => {\n            try{\n                // Make API call to get player stats\n                const response = await axios.get(`http://localhost:3001/player-stats/${playerId}`);\n                setStats(response.data.modelInput); \n                setProbability(response.data.probability); \n            } catch(error){\n                console.error('Error fetching player stats:', error);\n            }\n        };\n\n        if(playerId){\n          fetchPlayerStats();\n        }\n    }, [playerId]); \n\n    // Render player stats\n    return(\n        <div>\n            {stats ? (\n                <div>\n                <h1>{player.name} Stats</h1>\n                {/* Display points per game */}\n                <p>Points Per Game: {stats.PPG.toFixed(2)}</p>\n                <p>Assists Per Game: {stats.APG.toFixed(2)}</p>\n                <p>Rebounds Per Game: {stats.RPG.toFixed(2)}</p>\n                <p>MVPs: {stats.MVP}</p>\n                <p>FMVPs: {stats.FMVP}</p>\n                <p>DPOY: {stats.DPOY}</p>\n                <p>ROY: {stats.ROY}</p>\n                <p>Championships: {stats.Championships}</p>\n                <p>All Stars: {stats.AllStars}</p>\n                <p>First Team All-NBA: {stats.FirstTeam}</p>\n                <p>Second Team All-NBA: {stats.SecondTeam}</p>\n                <p>Third Team All-NBA: {stats.ThirdTeam}</p>\n                <p>First Team All-Defense: {stats.DefFirstTeam}</p>\n                <p>First Team All-Rookie: {stats.RookieFirstTeam}</p>\n                <p>Second Team All-Rookie: {stats.RookieSecondTeam}</p>\n                {/* Display Hall of Fame probability */}\n                <h2>Hall of Fame Probability: {(probability * 100).toFixed(2)}%</h2>\n              </div>\n            ) : (\n              <p>Loading stats...</p>\n            )}\n          </div>\n        );\n}\n      \nexport default PlayerStats;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}